(function() {var type_impls = {
"binrw":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BinRead-for-FilePtr%3CPtr,+Value%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#205-221\">source</a><a href=\"#impl-BinRead-for-FilePtr%3CPtr,+Value%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ptr, Value&gt; <a class=\"trait\" href=\"binrw/trait.BinRead.html\" title=\"trait binrw::BinRead\">BinRead</a> for <a class=\"struct\" href=\"binrw/struct.FilePtr.html\" title=\"struct binrw::FilePtr\">FilePtr</a>&lt;Ptr, Value&gt;<div class=\"where\">where\n    Ptr: for&lt;'a&gt; <a class=\"trait\" href=\"binrw/trait.BinRead.html\" title=\"trait binrw::BinRead\">BinRead</a>&lt;Args&lt;'a&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"binrw/file_ptr/trait.IntoSeekFrom.html\" title=\"trait binrw::file_ptr::IntoSeekFrom\">IntoSeekFrom</a>,\n    Value: <a class=\"trait\" href=\"binrw/trait.BinRead.html\" title=\"trait binrw::BinRead\">BinRead</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Args\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Args\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"binrw/trait.BinRead.html#associatedtype.Args\" class=\"associatedtype\">Args</a>&lt;'a&gt; = <a class=\"struct\" href=\"binrw/file_ptr/struct.FilePtrArgs.html\" title=\"struct binrw::file_ptr::FilePtrArgs\">FilePtrArgs</a>&lt;&lt;Value as <a class=\"trait\" href=\"binrw/trait.BinRead.html\" title=\"trait binrw::BinRead\">BinRead</a>&gt;::<a class=\"associatedtype\" href=\"binrw/trait.BinRead.html#associatedtype.Args\" title=\"type binrw::BinRead::Args\">Args</a>&lt;'a&gt;&gt;</h4></section></summary><div class='docblock'>The type used for the <code>args</code> parameter of <a href=\"binrw/trait.BinRead.html#method.read_args\"><code>read_args()</code></a> and\n<a href=\"binrw/trait.BinRead.html#tymethod.read_options\"><code>read_options()</code></a>. <a href=\"binrw/trait.BinRead.html#associatedtype.Args\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_options\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#212-220\">source</a><a href=\"#method.read_options\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"binrw/trait.BinRead.html#tymethod.read_options\" class=\"fn\">read_options</a>&lt;R: <a class=\"trait\" href=\"binrw/io/trait.Read.html\" title=\"trait binrw::io::Read\">Read</a> + <a class=\"trait\" href=\"binrw/io/trait.Seek.html\" title=\"trait binrw::io::Seek\">Seek</a>&gt;(\n    reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>,\n    endian: <a class=\"enum\" href=\"binrw/enum.Endian.html\" title=\"enum binrw::Endian\">Endian</a>,\n    args: Self::<a class=\"associatedtype\" href=\"binrw/trait.BinRead.html#associatedtype.Args\" title=\"type binrw::BinRead::Args\">Args</a>&lt;'_&gt;,\n) -&gt; <a class=\"type\" href=\"binrw/type.BinResult.html\" title=\"type binrw::BinResult\">BinResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Read <code>Self</code> from the reader using the given <a href=\"binrw/enum.Endian.html\" title=\"enum binrw::Endian\"><code>Endian</code></a> and\narguments. <a href=\"binrw/trait.BinRead.html#tymethod.read_options\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_be_args\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/binrw/binread/mod.rs.html#126-128\">source</a><a href=\"#method.read_be_args\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"binrw/trait.BinRead.html#method.read_be_args\" class=\"fn\">read_be_args</a>&lt;R: <a class=\"trait\" href=\"binrw/io/trait.Read.html\" title=\"trait binrw::io::Read\">Read</a> + <a class=\"trait\" href=\"binrw/io/trait.Seek.html\" title=\"trait binrw::io::Seek\">Seek</a>&gt;(\n    reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>,\n    args: Self::<a class=\"associatedtype\" href=\"binrw/trait.BinRead.html#associatedtype.Args\" title=\"type binrw::BinRead::Args\">Args</a>&lt;'_&gt;,\n) -&gt; <a class=\"type\" href=\"binrw/type.BinResult.html\" title=\"type binrw::BinResult\">BinResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Read <code>Self</code> from the reader, assuming big-endian byte order, using the\ngiven arguments. <a href=\"binrw/trait.BinRead.html#method.read_be_args\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_le_args\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/binrw/binread/mod.rs.html#137-139\">source</a><a href=\"#method.read_le_args\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"binrw/trait.BinRead.html#method.read_le_args\" class=\"fn\">read_le_args</a>&lt;R: <a class=\"trait\" href=\"binrw/io/trait.Read.html\" title=\"trait binrw::io::Read\">Read</a> + <a class=\"trait\" href=\"binrw/io/trait.Seek.html\" title=\"trait binrw::io::Seek\">Seek</a>&gt;(\n    reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>,\n    args: Self::<a class=\"associatedtype\" href=\"binrw/trait.BinRead.html#associatedtype.Args\" title=\"type binrw::BinRead::Args\">Args</a>&lt;'_&gt;,\n) -&gt; <a class=\"type\" href=\"binrw/type.BinResult.html\" title=\"type binrw::BinResult\">BinResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Read <code>Self</code> from the reader, assuming little-endian byte order, using\nthe given arguments. <a href=\"binrw/trait.BinRead.html#method.read_le_args\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_ne_args\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/binrw/binread/mod.rs.html#148-150\">source</a><a href=\"#method.read_ne_args\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"binrw/trait.BinRead.html#method.read_ne_args\" class=\"fn\">read_ne_args</a>&lt;R: <a class=\"trait\" href=\"binrw/io/trait.Read.html\" title=\"trait binrw::io::Read\">Read</a> + <a class=\"trait\" href=\"binrw/io/trait.Seek.html\" title=\"trait binrw::io::Seek\">Seek</a>&gt;(\n    reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>,\n    args: Self::<a class=\"associatedtype\" href=\"binrw/trait.BinRead.html#associatedtype.Args\" title=\"type binrw::BinRead::Args\">Args</a>&lt;'_&gt;,\n) -&gt; <a class=\"type\" href=\"binrw/type.BinResult.html\" title=\"type binrw::BinResult\">BinResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Read <code>T</code> from the reader, assuming native-endian byte order, using the\ngiven arguments. <a href=\"binrw/trait.BinRead.html#method.read_ne_args\">Read more</a></div></details></div></details>","BinRead","binrw::file_ptr::FilePtr8","binrw::file_ptr::FilePtr16","binrw::file_ptr::FilePtr32","binrw::file_ptr::FilePtr64","binrw::file_ptr::FilePtr128","binrw::file_ptr::NonZeroFilePtr8","binrw::file_ptr::NonZeroFilePtr16","binrw::file_ptr::NonZeroFilePtr32","binrw::file_ptr::NonZeroFilePtr64","binrw::file_ptr::NonZeroFilePtr128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-FilePtr%3CPtr,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#196\">source</a><a href=\"#impl-Debug-for-FilePtr%3CPtr,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ptr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"binrw/file_ptr/trait.IntoSeekFrom.html\" title=\"trait binrw::file_ptr::IntoSeekFrom\">IntoSeekFrom</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"binrw/struct.FilePtr.html\" title=\"struct binrw::FilePtr\">FilePtr</a>&lt;Ptr, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#196\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","binrw::file_ptr::FilePtr8","binrw::file_ptr::FilePtr16","binrw::file_ptr::FilePtr32","binrw::file_ptr::FilePtr64","binrw::file_ptr::FilePtr128","binrw::file_ptr::NonZeroFilePtr8","binrw::file_ptr::NonZeroFilePtr16","binrw::file_ptr::NonZeroFilePtr32","binrw::file_ptr::NonZeroFilePtr64","binrw::file_ptr::NonZeroFilePtr128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-FilePtr%3CPtr,+Value%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#344-372\">source</a><a href=\"#impl-Deref-for-FilePtr%3CPtr,+Value%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ptr, Value&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"binrw/struct.FilePtr.html\" title=\"struct binrw::FilePtr\">FilePtr</a>&lt;Ptr, Value&gt;<div class=\"where\">where\n    Ptr: <a class=\"trait\" href=\"binrw/file_ptr/trait.IntoSeekFrom.html\" title=\"trait binrw::file_ptr::IntoSeekFrom\">IntoSeekFrom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#369-371\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class=\"docblock\"><p>Dereferences the value stored by <code>FilePtr</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>binrw::FilePtr16;\n\n<span class=\"attr\">#[derive(BinRead)]\n</span><span class=\"kw\">struct </span>Test {\n    value: FilePtr16&lt;u16&gt;\n}\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>data = binrw::io::Cursor::new(<span class=\"string\">b\"\\x02\\x00\\x01\\x00\"</span>);\n<span class=\"kw\">let </span>result = Test::read_le(<span class=\"kw-2\">&amp;mut </span>data).unwrap();\n<span class=\"macro\">assert_eq!</span>(result.value.ptr, <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(result.value.value, <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>result.value, <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = Value</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details></div></details>","Deref","binrw::file_ptr::FilePtr8","binrw::file_ptr::FilePtr16","binrw::file_ptr::FilePtr32","binrw::file_ptr::FilePtr64","binrw::file_ptr::FilePtr128","binrw::file_ptr::NonZeroFilePtr8","binrw::file_ptr::NonZeroFilePtr16","binrw::file_ptr::NonZeroFilePtr32","binrw::file_ptr::NonZeroFilePtr64","binrw::file_ptr::NonZeroFilePtr128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-FilePtr%3CPtr,+Value%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#374-401\">source</a><a href=\"#impl-DerefMut-for-FilePtr%3CPtr,+Value%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ptr, Value&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"binrw/struct.FilePtr.html\" title=\"struct binrw::FilePtr\">FilePtr</a>&lt;Ptr, Value&gt;<div class=\"where\">where\n    Ptr: <a class=\"trait\" href=\"binrw/file_ptr/trait.IntoSeekFrom.html\" title=\"trait binrw::file_ptr::IntoSeekFrom\">IntoSeekFrom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#398-400\">source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Value</a></h4></section></summary><div class=\"docblock\"><p>Mutably dereferences the value stored by <code>FilePtr</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>binrw::FilePtr16;\n\n<span class=\"attr\">#[derive(BinRead)]\n</span><span class=\"kw\">struct </span>Test {\n    value: FilePtr16&lt;u16&gt;\n}\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>data = binrw::io::Cursor::new(<span class=\"string\">b\"\\x02\\x00\\x01\\x00\"</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>result = Test::read_le(<span class=\"kw-2\">&amp;mut </span>data).unwrap();\n<span class=\"macro\">assert_eq!</span>(result.value.ptr, <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(result.value.value, <span class=\"number\">1</span>);\n<span class=\"kw-2\">*</span>result.value = <span class=\"number\">42</span>;\n<span class=\"macro\">assert_eq!</span>(result.value.value, <span class=\"number\">42</span>);</code></pre></div>\n</div></details></div></details>","DerefMut","binrw::file_ptr::FilePtr8","binrw::file_ptr::FilePtr16","binrw::file_ptr::FilePtr32","binrw::file_ptr::FilePtr64","binrw::file_ptr::FilePtr128","binrw::file_ptr::NonZeroFilePtr8","binrw::file_ptr::NonZeroFilePtr16","binrw::file_ptr::NonZeroFilePtr32","binrw::file_ptr::NonZeroFilePtr64","binrw::file_ptr::NonZeroFilePtr128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FilePtr%3CPtr,+Value%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#223-342\">source</a><a href=\"#impl-FilePtr%3CPtr,+Value%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ptr, Value&gt; <a class=\"struct\" href=\"binrw/struct.FilePtr.html\" title=\"struct binrw::FilePtr\">FilePtr</a>&lt;Ptr, Value&gt;<div class=\"where\">where\n    Ptr: <a class=\"trait\" href=\"binrw/file_ptr/trait.IntoSeekFrom.html\" title=\"trait binrw::file_ptr::IntoSeekFrom\">IntoSeekFrom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#234-240\">source</a><h4 class=\"code-header\">pub fn <a href=\"binrw/struct.FilePtr.html#tymethod.parse\" class=\"fn\">parse</a>&lt;Args, __BinrwGeneratedStreamT: <a class=\"trait\" href=\"binrw/io/trait.Read.html\" title=\"trait binrw::io::Read\">Read</a> + <a class=\"trait\" href=\"binrw/io/trait.Seek.html\" title=\"trait binrw::io::Seek\">Seek</a>&gt;(\n    reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __BinrwGeneratedStreamT</a>,\n    endian: <a class=\"enum\" href=\"binrw/enum.Endian.html\" title=\"enum binrw::Endian\">Endian</a>,\n    args: <a class=\"struct\" href=\"binrw/file_ptr/struct.FilePtrArgs.html\" title=\"struct binrw::file_ptr::FilePtrArgs\">FilePtrArgs</a>&lt;Args&gt;,\n) -&gt; <a class=\"type\" href=\"binrw/type.BinResult.html\" title=\"type binrw::BinResult\">BinResult</a>&lt;Value&gt;<div class=\"where\">where\n    Ptr: for&lt;'a&gt; <a class=\"trait\" href=\"binrw/trait.BinRead.html\" title=\"trait binrw::BinRead\">BinRead</a>&lt;Args&lt;'a&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"binrw/file_ptr/trait.IntoSeekFrom.html\" title=\"trait binrw::file_ptr::IntoSeekFrom\">IntoSeekFrom</a>,\n    Value: for&lt;'a&gt; <a class=\"trait\" href=\"binrw/trait.BinRead.html\" title=\"trait binrw::BinRead\">BinRead</a>&lt;Args&lt;'a&gt; = Args&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Reads an offset, then seeks to and parses the pointed-to value using the\n<a href=\"binrw/trait.BinRead.html\" title=\"trait binrw::BinRead\"><code>BinRead</code></a> implementation for <code>Value</code>. Returns the pointed-to value.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>If reading fails, an <a href=\"binrw/enum.Error.html\" title=\"enum binrw::Error\"><code>Error</code></a> variant will be returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_with\" class=\"method\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#266-276\">source</a><h4 class=\"code-header\">pub fn <a href=\"binrw/struct.FilePtr.html#tymethod.parse_with\" class=\"fn\">parse_with</a>&lt;R, F, Args&gt;(\n    parser: F,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>, <a class=\"enum\" href=\"binrw/enum.Endian.html\" title=\"enum binrw::Endian\">Endian</a>, <a class=\"struct\" href=\"binrw/file_ptr/struct.FilePtrArgs.html\" title=\"struct binrw::file_ptr::FilePtrArgs\">FilePtrArgs</a>&lt;Args&gt;) -&gt; <a class=\"type\" href=\"binrw/type.BinResult.html\" title=\"type binrw::BinResult\">BinResult</a>&lt;Value&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"binrw/io/trait.Read.html\" title=\"trait binrw::io::Read\">Read</a> + <a class=\"trait\" href=\"binrw/io/trait.Seek.html\" title=\"trait binrw::io::Seek\">Seek</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>, <a class=\"enum\" href=\"binrw/enum.Endian.html\" title=\"enum binrw::Endian\">Endian</a>, Args) -&gt; <a class=\"type\" href=\"binrw/type.BinResult.html\" title=\"type binrw::BinResult\">BinResult</a>&lt;Value&gt;,\n    Ptr: for&lt;'a&gt; <a class=\"trait\" href=\"binrw/trait.BinRead.html\" title=\"trait binrw::BinRead\">BinRead</a>&lt;Args&lt;'a&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"binrw/file_ptr/trait.IntoSeekFrom.html\" title=\"trait binrw::file_ptr::IntoSeekFrom\">IntoSeekFrom</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a parser that reads an offset, then seeks to and parses the\npointed-to value using the given <code>parser</code> function. Returns the\npointed-to value.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>If reading fails, an <a href=\"binrw/enum.Error.html\" title=\"enum binrw::Error\"><code>Error</code></a> variant will be returned.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>binrw::FilePtr16;\n\n<span class=\"attr\">#[derive(BinRead)]\n</span><span class=\"kw\">struct </span>Test {\n    <span class=\"attr\">#[br(parse_with = FilePtr16::parse_with(read_u24))]\n    </span>value: u32\n}\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>data = binrw::io::Cursor::new(<span class=\"string\">b\"\\x02\\x00\\x07\\x0f\\x10\"</span>);\n<span class=\"kw\">let </span>result = Test::read_le(<span class=\"kw-2\">&amp;mut </span>data).unwrap();\n<span class=\"macro\">assert_eq!</span>(result.value, <span class=\"number\">0x100f07</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with\" class=\"method\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#303-316\">source</a><h4 class=\"code-header\">pub fn <a href=\"binrw/struct.FilePtr.html#tymethod.with\" class=\"fn\">with</a>&lt;R, F, Args&gt;(\n    parser: F,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>, <a class=\"enum\" href=\"binrw/enum.Endian.html\" title=\"enum binrw::Endian\">Endian</a>, <a class=\"struct\" href=\"binrw/file_ptr/struct.FilePtrArgs.html\" title=\"struct binrw::file_ptr::FilePtrArgs\">FilePtrArgs</a>&lt;Args&gt;) -&gt; <a class=\"type\" href=\"binrw/type.BinResult.html\" title=\"type binrw::BinResult\">BinResult</a>&lt;Self&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"binrw/io/trait.Read.html\" title=\"trait binrw::io::Read\">Read</a> + <a class=\"trait\" href=\"binrw/io/trait.Seek.html\" title=\"trait binrw::io::Seek\">Seek</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>, <a class=\"enum\" href=\"binrw/enum.Endian.html\" title=\"enum binrw::Endian\">Endian</a>, Args) -&gt; <a class=\"type\" href=\"binrw/type.BinResult.html\" title=\"type binrw::BinResult\">BinResult</a>&lt;Value&gt;,\n    Ptr: for&lt;'a&gt; <a class=\"trait\" href=\"binrw/trait.BinRead.html\" title=\"trait binrw::BinRead\">BinRead</a>&lt;Args&lt;'a&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"binrw/file_ptr/trait.IntoSeekFrom.html\" title=\"trait binrw::file_ptr::IntoSeekFrom\">IntoSeekFrom</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a parser that reads an offset, then seeks to and parses the\npointed-to value using the given <code>parser</code> function. Returns a\n<a href=\"binrw/struct.FilePtr.html\" title=\"struct binrw::FilePtr\"><code>FilePtr</code></a> containing the offset and value.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>If reading fails, an <a href=\"binrw/enum.Error.html\" title=\"enum binrw::Error\"><code>Error</code></a> variant will be returned.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>binrw::FilePtr16;\n\n<span class=\"attr\">#[derive(BinRead)]\n</span><span class=\"kw\">struct </span>Test {\n    <span class=\"attr\">#[br(parse_with = FilePtr16::with(read_u24))]\n    </span>value: FilePtr16&lt;u32&gt;\n}\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>data = binrw::io::Cursor::new(<span class=\"string\">b\"\\x02\\x00\\x07\\x0f\\x10\"</span>);\n<span class=\"kw\">let </span>result = Test::read_le(<span class=\"kw-2\">&amp;mut </span>data).unwrap();\n<span class=\"macro\">assert_eq!</span>(result.value.ptr, <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(result.value.value, <span class=\"number\">0x100f07</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#319-321\">source</a><h4 class=\"code-header\">pub fn <a href=\"binrw/struct.FilePtr.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; Value</h4></section></summary><div class=\"docblock\"><p>Consumes this object, returning the pointed-to value.</p>\n</div></details></div></details>",0,"binrw::file_ptr::FilePtr8","binrw::file_ptr::FilePtr16","binrw::file_ptr::FilePtr32","binrw::file_ptr::FilePtr64","binrw::file_ptr::FilePtr128","binrw::file_ptr::NonZeroFilePtr8","binrw::file_ptr::NonZeroFilePtr16","binrw::file_ptr::NonZeroFilePtr32","binrw::file_ptr::NonZeroFilePtr64","binrw::file_ptr::NonZeroFilePtr128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-FilePtr%3CPtr,+Value%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#403-411\">source</a><a href=\"#impl-PartialEq-for-FilePtr%3CPtr,+Value%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ptr, Value&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"binrw/struct.FilePtr.html\" title=\"struct binrw::FilePtr\">FilePtr</a>&lt;Ptr, Value&gt;<div class=\"where\">where\n    Ptr: <a class=\"trait\" href=\"binrw/file_ptr/trait.IntoSeekFrom.html\" title=\"trait binrw::file_ptr::IntoSeekFrom\">IntoSeekFrom</a>,\n    Value: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#408-410\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","binrw::file_ptr::FilePtr8","binrw::file_ptr::FilePtr16","binrw::file_ptr::FilePtr32","binrw::file_ptr::FilePtr64","binrw::file_ptr::FilePtr128","binrw::file_ptr::NonZeroFilePtr8","binrw::file_ptr::NonZeroFilePtr16","binrw::file_ptr::NonZeroFilePtr32","binrw::file_ptr::NonZeroFilePtr64","binrw::file_ptr::NonZeroFilePtr128"],["<section id=\"impl-Eq-for-FilePtr%3CPtr,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/binrw/file_ptr.rs.html#196\">source</a><a href=\"#impl-Eq-for-FilePtr%3CPtr,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ptr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"binrw/file_ptr/trait.IntoSeekFrom.html\" title=\"trait binrw::file_ptr::IntoSeekFrom\">IntoSeekFrom</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"binrw/struct.FilePtr.html\" title=\"struct binrw::FilePtr\">FilePtr</a>&lt;Ptr, T&gt;</h3></section>","Eq","binrw::file_ptr::FilePtr8","binrw::file_ptr::FilePtr16","binrw::file_ptr::FilePtr32","binrw::file_ptr::FilePtr64","binrw::file_ptr::FilePtr128","binrw::file_ptr::NonZeroFilePtr8","binrw::file_ptr::NonZeroFilePtr16","binrw::file_ptr::NonZeroFilePtr32","binrw::file_ptr::NonZeroFilePtr64","binrw::file_ptr::NonZeroFilePtr128"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()